(define nil '())
(define (square-tree tree)
    (cond ((null? tree) nil)
        ((not (pair? tree)) (* tree tree))
        (else (cons (square-tree (car tree))
                    (square-tree (cdr tree))))))

(define (square-tree1 tree)
    (map (lambda (sub-tree)
        (if (pair? sub-tree)
            (square-tree1 sub-tree)
            (square sub-tree)))
    tree))

(define x (list 1 (list 2 ( list 3 4) 5) (list 6 7)))
